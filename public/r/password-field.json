{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "password-field",
  "type": "registry:component",
  "title": "Password Field",
  "description": "A component for Wandry UI",
  "dependencies": [
    "lucide-react",
    "@wandry/inertia-form@^1.7.0-beta.1"
  ],
  "registryDependencies": [
    "input-group"
  ],
  "files": [
    {
      "path": "registry/wandry-ui/password-field.tsx",
      "content": "\"use client\";\nimport * as React from \"react\";\nimport { useField } from \"@wandry/inertia-form\";\nimport { EyeIcon, EyeOffIcon } from \"lucide-react\";\n\nimport {\n  Field,\n  FieldDescription,\n  FieldError,\n  FieldLabel,\n} from \"@/components/ui/field\";\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButton,\n  InputGroupInput,\n} from \"@/components/ui/input-group\";\n\nexport type InputProps = Omit<React.ComponentProps<\"input\">, \"type\">;\n\nexport type PasswordFieldProps = InputProps & {\n  name: string;\n  label?: string;\n  description?: string;\n  placeholder?: string;\n};\n\nconst PasswordField: React.FC<PasswordFieldProps> = ({\n  name,\n  label,\n  description,\n  placeholder,\n  ...inputProps\n}) => {\n  const [visible, setVisible] = React.useState(false);\n  const field = useField(name, { defaultValue: \"\" });\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    field.onChange(value);\n  };\n\n  return (\n    <Field>\n      <FieldLabel htmlFor={name}>{label}</FieldLabel>\n      <InputGroup>\n        <InputGroupInput\n          id={name}\n          name={name}\n          value={field.value}\n          onChange={onChange}\n          type={visible ? \"text\" : \"password\"}\n          {...inputProps}\n        />\n\n        <InputGroupAddon align=\"inline-end\">\n          <InputGroupButton\n            aria-label=\"Toggle visibility\"\n            onClick={() => setVisible(!visible)}\n            size=\"icon-xs\"\n            variant=\"ghost\"\n          >\n            {visible ? <EyeOffIcon /> : <EyeIcon />}\n          </InputGroupButton>\n        </InputGroupAddon>\n      </InputGroup>\n      <FieldDescription>{description}</FieldDescription>\n      <FieldError>{field.error}</FieldError>\n    </Field>\n  );\n};\n\nexport default PasswordField;\n",
      "type": "registry:component"
    }
  ]
}