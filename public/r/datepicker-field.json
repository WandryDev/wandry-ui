{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "datepicker-field",
  "type": "registry:component",
  "title": "DatepickerField",
  "description": "A component for Wandry UI",
  "dependencies": [
    "@wandry/inertia-form"
  ],
  "registryDependencies": [
    "calendar",
    "popover",
    "button",
    "field"
  ],
  "files": [
    {
      "path": "registry/wandry-ui/datepicker-field.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { useField } from \"@wandry/inertia-form\";\nimport { ChevronDownIcon } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Field,\n  FieldDescription,\n  FieldError,\n  FieldLabel,\n} from \"@/components/ui/field\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { DayPicker } from \"react-day-picker\";\n\nexport type DatepickerFieldProps = React.ComponentProps<typeof DayPicker> & {\n  name: string;\n  placeholder?: string;\n  description?: string;\n  label?: string;\n  variant?: React.ComponentProps<typeof Button>[\"variant\"];\n};\n\nconst DatepickerField: React.FC<DatepickerFieldProps> = ({\n  name,\n  label,\n  placeholder,\n  description,\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const field = useField(name, { defaultValue: new Date() });\n\n  return (\n    <Field>\n      <FieldLabel htmlFor={name}>{label}</FieldLabel>\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            suppressHydrationWarning\n            variant=\"outline\"\n            id=\"date\"\n            className=\"w-48 justify-between font-normal\"\n          >\n            {field.value ? field.value.toLocaleDateString() : placeholder}\n            <ChevronDownIcon />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto overflow-hidden p-0\" align=\"start\">\n          <Calendar\n            mode=\"single\"\n            selected={field.value}\n            captionLayout=\"dropdown\"\n            onSelect={(date) => {\n              field.onChange(date);\n              setOpen(false);\n            }}\n          />\n        </PopoverContent>\n      </Popover>\n      <FieldDescription>{description}</FieldDescription>\n      <FieldError>{field.error}</FieldError>\n    </Field>\n  );\n};\n\nexport default DatepickerField;\n",
      "type": "registry:component"
    }
  ]
}